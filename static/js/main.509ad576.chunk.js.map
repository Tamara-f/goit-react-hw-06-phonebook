{"version":3,"sources":["components/Section.js","components/ContactListItem.js","redux/phonebookActionTypes.js","components/ContactList.js","redux/phohebookActions.js","components/ContactEditor.js","components/Filter.js","components/App.js","redux/phoneReducer.js","redux/store.js","index.js"],"names":["Section","title","children","defaultProps","ContactListItem","name","number","onRemove","type","className","onClick","mapDispatchToProps","onRemoveContact","contactId","actionTypes","payload","connect","contacts","items","filter","contact","toLowerCase","includes","length","map","id","key","INIT","ContactEditor","state","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onAddContact","this","onSubmit","htmlFor","onChange","Component","uuidv4","onChangeFilter","App","combineReducers","rootReducer","phoneReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","querySelector"],"mappings":"sOAGA,SAASA,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,iCACE,4BAAKD,GACJC,GAKPF,EAAQG,aAAe,CACrBF,MAAO,IAMMD,QCCAI,EAjBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQC,EAAjB,EAAiBA,SAAjB,OACtB,4BACE,8BACGF,EADH,KACWC,GAEX,4BAAQE,KAAK,SAASC,UAAU,YAAYC,QAASH,GAArD,Y,QCJW,EAJH,gBAIG,EAHA,mBAGA,EAFA,mBC2CTI,EAAqB,CACzBC,gBC/B2B,SAAAC,GAC3B,MAAO,CACLL,KAAMM,EACNC,QAAS,CACPF,gBD8BSG,eAdS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACjBC,EAAkBD,EAAlBC,MAAOC,EAAWF,EAAXE,OAIf,MAAO,CACLF,SAJsBC,EAAMC,QAAO,SAAAC,GAAO,OAC1CA,EAAQf,KAAKgB,cAAcC,SAASH,EAAOE,qBAWPV,EAAzBK,EA1CK,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUL,EAAsB,EAAtBA,gBAC/B,OAAIK,EAASM,OAAS,EAElB,4BACGN,EAASO,KAAI,gBAAGC,EAAH,EAAGA,GAAIpB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,kBAAC,EAAD,CACEoB,IAAKD,EACLpB,KAAMA,EACNC,OAAQA,EACRC,SAAU,kBAAMK,EAAgBa,UAK5B,Q,uCEfVE,EAAO,CACXtB,KAAM,GACNC,OAAQ,IAGJsB,E,4MACJC,MAAQF,E,EACRG,aAAe,YAAiB,IAAdC,EAAa,EAAbA,OACR1B,EAAgB0B,EAAhB1B,KAAM2B,EAAUD,EAAVC,MACd,EAAKC,SAAL,eACG5B,EAAO2B,K,EAIZE,aAAe,SAAAC,GACbA,EAAEC,iBAEF,EAAKC,MAAMC,aAAa,EAAKT,OAC7B,EAAKI,SAASN,I,uDAGN,IAAD,EACkBY,KAAKV,MAAtBxB,EADD,EACCA,KAAMC,EADP,EACOA,OACd,OACE,oCACE,yCACA,0BAAMkC,SAAUD,KAAKL,cACnB,2BAAOO,QAAQ,QAAf,OAEE,6BACA,2BACEjC,KAAK,OACLwB,MAAO3B,EACPqC,SAAUH,KAAKT,aACfzB,KAAK,UAGT,2BAAOoC,QAAQ,UAAf,SAEE,6BACA,2BACEjC,KAAK,OACLwB,MAAO1B,EACPoC,SAAUH,KAAKT,aACfzB,KAAK,YAGT,4BAAQG,KAAK,UAAb,qB,GA1CkBmC,aAiDtBhC,EAAqB,CACzB2B,aDzDwB,SAAC,GAAD,IAAGjC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAT,MAAuB,CAC/CE,KAAMM,EACNC,QAAS,CACPK,QAAS,CACPK,GAAImB,cACJvC,KAAMA,EACNC,OAAQA,OCsDCU,cAAQ,KAAML,EAAdK,CAAkCY,GCvC3CjB,EAAqB,CACzBkC,eFF0B,SAAA1B,GAC1B,MAAO,CACLX,KAAMM,EACNC,QAAS,CACPI,aEASH,eAPS,SAAAa,GAAK,MAAK,CAChCG,MAAOH,EAAMZ,SAASE,UAMgBR,EAAzBK,EAtBA,SAAC,GAAD,IAAGgB,EAAH,EAAGA,MAAOa,EAAV,EAAUA,eAAV,OACb,6BACE,2CACA,2BACErC,KAAK,OACLwB,MAAOA,EACPU,SAAU,SAAAP,GAAC,OAAIU,EAAeV,EAAEJ,OAAOC,cCL9B,SAASc,IACtB,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,wCAMA,kBAAC,EAAD,MACA,kBAAC,EAAD,O,mBCOSC,cAAgB,CAAE7B,MAtBnB,WAAoC,IAAnCW,EAAkC,uDAA1B,GAA0B,yCAApBrB,EAAoB,EAApBA,KAAMO,EAAc,EAAdA,QACjC,OAAQP,GACN,KAAKM,EACH,MAAM,GAAN,mBAAWe,GAAX,CAAkBd,EAAQK,UAE5B,KAAKN,EACH,OAAOe,EAAMV,QAAO,SAAAC,GAAO,OAAIA,EAAQK,KAAOV,EAAQF,aAExD,QACE,OAAOgB,IAa2BV,OATzB,WAAoC,IAAnCU,EAAkC,uDAA1B,GAA0B,yCAApBrB,EAAoB,EAApBA,KAAMO,EAAc,EAAdA,QAClC,OAAQP,GACN,KAAKM,EACH,OAAOC,EAAQI,OACjB,QACE,OAAOU,MClBPmB,EAAcD,YAAgB,CAClC9B,SAAUgC,IAQGC,EALDC,YACZH,EACAI,OAAOC,8BAAgCD,OAAOC,gC,MCAhDC,IAASC,OACP,kBAAC,IAAD,CAAUL,MAAOA,GACf,kBAACJ,EAAD,OAEFU,SAASC,cAAc,Y","file":"static/js/main.509ad576.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.defaultProps = {\r\n  title: '',\r\n};\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node.isRequired,\r\n};\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactListItem = ({ name, number, onRemove }) => (\r\n  <li>\r\n    <span>\r\n      {name}: {number}\r\n    </span>\r\n    <button type=\"button\" className=\"deleteBtn\" onClick={onRemove}>\r\n      Delete\r\n    </button>\r\n  </li>\r\n);\r\n\r\nContactListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onRemove: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","const ADD = 'phonebook/add';\r\nconst REMOVE = 'phonebook/remove';\r\nconst FILTER = 'phonebook/filter';\r\n\r\nexport default {\r\n  ADD,\r\n  REMOVE,\r\n  FILTER,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport ContactListItem from './ContactListItem';\r\nimport { removeContact } from '../redux/phohebookActions';\r\n\r\nconst ContactList = ({ contacts, onRemoveContact }) => {\r\n  if (contacts.length > 0) {\r\n    return (\r\n      <ul>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <ContactListItem\r\n            key={id}\r\n            name={name}\r\n            number={number}\r\n            onRemove={() => onRemoveContact(id)}\r\n          />\r\n        ))}\r\n      </ul>\r\n    );\r\n  } else return null;\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = ({ contacts }) => {\r\n  const { items, filter } = contacts;\r\n  const visibleContacts = items.filter(contact =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n  return {\r\n    contacts: visibleContacts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onRemoveContact: removeContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import { v4 as uuidv4 } from 'uuid';\r\n\r\nimport actionTypes from './phonebookActionTypes';\r\n\r\nexport const addContact = ({ name, number }) => ({\r\n  type: actionTypes.ADD,\r\n  payload: {\r\n    contact: {\r\n      id: uuidv4(),\r\n      name: name,\r\n      number: number,\r\n    },\r\n  },\r\n});\r\n\r\nexport const removeContact = contactId => {\r\n  return {\r\n    type: actionTypes.REMOVE,\r\n    payload: {\r\n      contactId,\r\n    },\r\n  };\r\n};\r\n\r\nexport const changeFilter = filter => {\r\n  return {\r\n    type: actionTypes.FILTER,\r\n    payload: {\r\n      filter,\r\n    },\r\n  };\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n// import PropTypes from 'prop-types';\r\n\r\nimport { addContact } from '../redux/phohebookActions';\r\n\r\nconst INIT = {\r\n  name: '',\r\n  number: '',\r\n};\r\n\r\nclass ContactEditor extends Component {\r\n  state = INIT;\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddContact(this.state);\r\n    this.setState(INIT);\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <>\r\n        <h2>Phonebook</h2>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label htmlFor=\"name\">\r\n            Name\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n              name=\"name\"\r\n            />\r\n          </label>\r\n          <label htmlFor=\"number\">\r\n            Number\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              value={number}\r\n              onChange={this.handleChange}\r\n              name=\"number\"\r\n            />\r\n          </label>\r\n          <button type=\"submit\">Add contact</button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onAddContact: addContact,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactEditor);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { changeFilter } from '../redux/phohebookActions';\r\n\r\nconst Filter = ({ value, onChangeFilter }) => (\r\n  <div>\r\n    <span>Find name</span>\r\n    <input\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={e => onChangeFilter(e.target.value)}\r\n    />\r\n  </div>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  // onChangeFilter: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = state => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onChangeFilter: changeFilter,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\n\r\nimport Section from './Section';\r\nimport ContactList from './ContactList';\r\nimport ContactEditor from './ContactEditor';\r\nimport Filter from './Filter';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Section>\r\n      <ContactEditor />\r\n      <h2>Contacts</h2>\r\n\r\n      {/* {filterContacts.length > 0 && (\r\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\r\n        )} */}\r\n\r\n      <Filter />\r\n      <ContactList />\r\n    </Section>\r\n  );\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport actionTypes from './phonebookActionTypes';\r\n\r\nconst items = (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case actionTypes.ADD:\r\n      return [...state, payload.contact];\r\n\r\n    case actionTypes.REMOVE:\r\n      return state.filter(contact => contact.id !== payload.contactId);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst filter = (state = '', { type, payload }) => {\r\n  switch (type) {\r\n    case actionTypes.FILTER:\r\n      return payload.filter;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({ items, filter });\r\n","import { createStore, combineReducers } from 'redux';\r\nimport phoneReducer from './phoneReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: phoneReducer,\r\n});\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/App';\nimport store from './redux/store';\n\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}